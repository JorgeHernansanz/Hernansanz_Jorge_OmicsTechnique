if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("GEOquery")
knitr::opts_chunk$set(echo = TRUE)
'if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("GEOquery")'
library(GEOquery)
BiocManager::install(GEOquery)
BiocManager::install("GEOquery")
install.packages((GEOquery))
install.packages(("GEOquery"))
R -version
R
version
version
install.packages("GEOquery")
install.packages("BiocManager")
BiocManager::install("GEOquery")
library("GEOquery")
library("Biobase")
install.packages("httr")
install.packages("curl")
install.packages("curl")
install.packages("httr")
install.packages("openssl")
install.packages("httr")
install.packages("xlm2")
BiocManager::install("GEOquery")
install.packages("xml2")
install.packages("xml2")
BiocManager::install("GEOquery")
library("GEOquery")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(GEOquery)
gds <- getGEO("GDS5OT")
library(GEOquery)
gds <- getGEO("GSE71868")
My_expression_set <- ExpressionSet(assayData=expres,
phenoData = phenoData)
knitr::opts_chunk$set(echo = TRUE)
phenoData <- new("AnnotatedDataFrame", data=pData, metadata)
knitr::opts_chunk$set(echo = TRUE)
####import express matrix###
expres <- as.matrix(read.table("Expression.txt", header=TRUE, sep="\t", row.names=1, as.is=TRUE))
class(expres)
pData <- read.table("targets.txt", row.names=1, header=TRUE, sep="\t")
dim(pData)
summary(pData)
metadata <- data.frame(labelDescription=
c("Age",
"Score"),
row.names=c("age","score"))
metadata
phenoData <- new("AnnotatedDataFrame", data=pData, metadata)
phenoData
phenoData <- new("AnnotatedDataFrame", data=pData, metadata)
phenoData
phenoData <- new("AnnotatedDataFrame", data=pData, metadata)
phenoData
My_expression_set <- ExpressionSet(assayData=expres,
phenoData = phenoData)
My_expression_set
library(GEOquery)
gds <- getGEO("GSE71868")
head(pData(phenoData))
My_expression_set <- ExpressionSet(assayData=expres,
phenoData = phenoData)
My_expression_set
phenoData <- new("AnnotatedDataFrame", data=pData, metadata)
phenoData
phenoData <- new("AnnotatedDataFrame", data=pData, varMetadata=metadata)
phenoData
pData <- read.table("targets.txt", row.names=1, header=TRUE, sep="\t")
dim(pData)
summary(pData)
pData <- read.table("targets.txt", row.names=1, header=TRUE, sep="\t")
head(pData(phenoData))
'library(GEOquery)'
gds <- getGEO("GSE71868")
libray8"AnnotatedDataFrame"
libray("AnnotatedDataFrame")
library("AnnotatedDataFrame")
knitr::opts_chunk$set(echo = TRUE)
library(Biobase)
knitr::opts_chunk$set(echo = TRUE)
library(Biobase)
library(GEOquery)
####import express matrix###
expres <- as.matrix(read.table("Expression.txt", header=TRUE, sep="\t", row.names=1, as.is=TRUE))
class(expres)
express
####import express matrix###
expres <- as.matrix(read.table("Expression.txt", header=TRUE, sep="\t", row.names=1, as.is=TRUE))
class(expres)
expres
expressionValues <- matrix (rnorm (300), nrow=30)
expressionValues
expressionValues <- matrix (rnorm (300), nrow=30)
expressionValues
myGenes<- paste0("genes",1:30)
expressionValues <- matrix (rnorm (300), nrow=30)
expressionValues
#myGenes<- paste0("genes",1:30)
expressionValues <- matrix (rnorm (300), nrow=30)
expressionValues
myGenes<- paste0("genes",1:30)
expressionValues <- matrix (rnorm (300), nrow=30)
#expressionValues
myGenes<- paste0("genes",1:30)
myGenes
